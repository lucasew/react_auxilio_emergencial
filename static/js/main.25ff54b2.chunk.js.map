{"version":3,"sources":["components/CenteredBlock/index.tsx","components/Conditional/index.tsx","pages/Home/index.tsx","utils/toaster.ts","components/Topic/index.tsx","pages/ListBeneficiarios/index.tsx","pages/NotFound/index.tsx","components/Header/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["CenteredBlock","props","className","children","Conditional","choice","isBoolean","cond","fallback","Home","history","useHistory","useState","uf","setUf","ufs","setUfs","cities","setCities","localidade","setLocalidade","code","name","periodos","periodo","setPeriodo","useEffect","axios","get","then","res","status","data","sort","a","b","nome","localeCompare","toast","error","catch","e","console","log","id","autoFocus","required","onChange","ev","target","value","selected","key","map","cur","sigla","Number","onClick","push","useToastType","type","msg","success","info","warning","default","Topic","undefined","topicKey","String","topicValue","ListBeneficiarios","useParams","cidadeId","parseInt","isNaN","transparencia","setTransparencia","params","codigoIbge","mesAno","err","demorandoParaCarregar","setDemorandoParaCarregar","setTimeout","currencyFormatter","Intl","NumberFormat","style","currency","format","municipio","nomeIBGE","toLowerCase","codigoIBGE","quantidadeBeneficiados","valor","NotFound","location","useLocation","pathname","Header","Routes","component","path","exact","App","position","autoClose","newestOnTop","closeOnClick","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25ff54b2.chunk.js","sourcesContent":["import React from 'react'\n\nimport './styles.css'\n\ninterface Props {\n\n}\n\nconst CenteredBlock: React.FC<Props> = (props) => {\n    return (\n        <div className=\"centeredBlock\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default CenteredBlock","import React from 'react'\nimport { isBoolean } from 'util'\n\ninterface Props {\n    cond: (() => boolean) | boolean\n    fallback?: React.ReactNode\n}\n\nconst Conditional: React.FC<Props> = (props) => {\n    let cond = isBoolean(props.cond)\n        ? props.cond\n        : props.cond()\n    const choice = cond ? props.children : props.fallback\n    return (\n        <div>\n            {choice}\n        </div>\n    )\n}\n\nexport default Conditional","import React, { useEffect, useState} from 'react'\nimport axios from 'axios'\n\nimport CenteredBlock from '../../components/CenteredBlock'\nimport Condtional from '../../components/Conditional'\n\nimport {IBGECity, IBGEUf} from '../../models'\n\nimport './styles.css'\nimport { toast } from 'react-toastify'\nimport { useHistory } from 'react-router-dom'\n\nconst Home = () => {\n    const isUFDefined = () => uf !== ''\n    const isLocalidadeDefined = () => localidade !== 0\n    const isPeriodoDefined = () => periodo !== ''\n\n    let history = useHistory()\n\n    const [uf, setUf] = useState<string>('')\n    const [ufs, setUfs] = useState<IBGEUf[]>([])\n    const [cities, setCities] = useState<IBGECity[]>([])\n    const [localidade, setLocalidade] = useState(0)\n    const [periodos] = useState([\n        {code: \"202004\", name: \"abril 2020\"},\n        {code: \"202005\", name: \"maio 2020\"},\n        {code: \"202006\", name: \"junho 2020\"},\n    ])\n    const [periodo, setPeriodo] = useState('')\n\n    useEffect(() => {\n        axios.get<IBGEUf[]>('http://servicodados.ibge.gov.br/api/v1/localidades/estados/')\n            .then((res) => {\n                if (res.status === 200) {\n                    setUfs(res.data.sort((a, b) => a.nome.localeCompare(b.nome)))\n                } else {\n                    toast.error(\"Erro no servidor ao buscar os estados\")\n                }\n            })\n            .catch((e) => {\n                toast.error(\"Erro ao buscar os estados. Abra o console para mais detalhes\")\n                console.log(e)\n            })\n    }, [])\n\n    useEffect(() => {\n        if (uf === '') {\n            return\n        }\n        axios.get<IBGECity[]>(`http://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios`)\n            .then((res) => {\n                if (res.status === 200) {\n                    setCities(res.data)\n                } else {\n                    toast.error(\"Erro no servidor ao buscar as cidades\")\n                }\n            })\n            .catch((e) => {\n                toast.error(\"Erro ao buscar as cidades. Abra o console para mais detalhes\")\n                console.log(e)\n            })\n    }, [uf])\n\n    return (\n        <CenteredBlock>\n            <form>\n                <h1>uf</h1>\n                <select \n                    name=\"uf\" \n                    id=\"uf\" \n                    autoFocus \n                    required\n                    onChange={(ev) => setUf(ev.target.value)}\n                >\n                    <option selected key='' value=''>selecione um estado</option>\n                    {ufs.map((cur) => \n                        <option key={cur.sigla}\n                            value={cur.sigla} \n                        >{cur.nome}</option>\n                    )}\n                </select>\n                <Condtional cond={isUFDefined}>\n                    <h1>cidade</h1>\n                    <select \n                        name=\"city\" \n                        id=\"city\" \n                        required\n                        onChange={(ev) => setLocalidade(Number(ev.target.value))}\n                    >\n                        <option selected key={0} value={0}>selecione um município</option>\n                        {cities.map((cur) =>\n                            <option key={cur.id}\n                                value={cur.id}\n                            >{cur.nome}</option>\n                        )}\n                    </select>\n                </Condtional>\n                <Condtional cond={isLocalidadeDefined}>\n                    <h1>período</h1>\n                    <select\n                        name=\"periodo\"\n                        id=\"periodo\"\n                        required\n                        onChange={(ev) => setPeriodo(ev.target.value)}\n                        >\n                            <option selected key='' value=''>selecione um período</option>\n                            {periodos.map((cur) =>\n                                <option key={cur.code}\n                                    value={cur.code}\n                                >{cur.name}</option>\n                            )}\n                    </select>\n                </Condtional>\n                <Condtional cond={isPeriodoDefined}>\n                    <br/>\n                    <button onClick={() => \n                        history.push(`/show-cidade/${localidade}/${periodo}`)}\n                    >consultar</button>\n                </Condtional>\n            </form>\n        </CenteredBlock>\n    )\n}\n\nexport default Home","import toastify, {toast} from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction useToastType(type: toastify.TypeOptions) {\n    return function(msg: string) {\n        toast(msg, {\n            type\n        })\n    }\n}\n\nexport default {\n    error: useToastType('error'),\n    success: useToastType('success'),\n    info: useToastType('info'),\n    warning: useToastType('warning'),\n    default: useToastType('default'),\n}","import React from 'react'\n\nimport Conditional from '../Conditional'\n\ninterface Props {\n    topicKey?: string\n    topicValue: any\n}\n\nconst Topic: React.FC<Props> = (props) => {\n    return <p>\n        <Conditional cond={props.topicKey !== undefined}>\n            <span className=\"topicKey\">{props.topicKey} </span> \n        </Conditional>\n        <span className=\"topicValue\">{String(props.topicValue)}</span>\n    </p>\n}\n\nexport default Topic","import React, { useState, useEffect } from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport toast from '../../utils/toaster'\nimport axios from 'axios'\nimport CenteredBlock from '../../components/CenteredBlock'\nimport Topic from '../../components/Topic'\n\nimport './styles.css'\n\ninterface TransparenciaApiResult {\n    dataReferencia: string\n    municipio: {\n        codigoIBGE: string,\n        nomeIBGE: string\n        uf: {\n            sigla: string\n            nome: string\n        }\n    },\n    valor: number,\n    quantidadeBeneficiados: number\n}\n\nconst ListBeneficiarios = () => {\n    let history = useHistory()\n    const {cidadeId, periodo} = useParams()\n    const id = parseInt(cidadeId)\n    if (isNaN(id)) {\n        toast.error(\"Recebido id de cidade que não é um número inteiro. Redirecionando para a página inicial...\")\n        history.push('/')\n    }\n\n    const [transparencia, setTransparencia] = useState<TransparenciaApiResult>()\n\n    useEffect(() => {\n        axios.get<TransparenciaApiResult[]>(\"http://www.transparencia.gov.br/api-de-dados/auxilio-emergencial-por-municipio\", {\n            params: {\n                codigoIbge: id,\n                mesAno: periodo\n            }\n        })\n            .then((res) => {\n                if (res.status !== 200) {\n                    toast.error(\"Erro de servidor ao buscar informações do portal da transparência\")\n                    console.log(res.data)\n                } else {\n                    setTransparencia(res.data[0])\n                }\n            })\n            .catch((err) => {\n                toast.error(\"Erro ao buscar informações do portal da transparencia. Abra o console para mais detalhes.\")\n                console.log(err)\n            })\n    }, [id, periodo])\n\n    const [demorandoParaCarregar, setDemorandoParaCarregar] = useState(false)\n    setTimeout(() => {\n        setDemorandoParaCarregar(true)\n    }, 3000)\n\n    const currencyFormatter = new Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'brl',\n    }).format\n    \n    return (\n        <CenteredBlock>\n            {\n                transparencia === undefined ?\n                    <h1>{!demorandoParaCarregar ? \"carregando...\" : \"eu ainda não desisti! carregando...\"}</h1>\n                :\n                <div>\n                    <h1>{transparencia.municipio.nomeIBGE.toLowerCase()} - {transparencia.municipio.uf.sigla.toLowerCase()} (ibge {transparencia.municipio.codigoIBGE})</h1>\n                    <Topic topicKey=\"beneficiários\" topicValue={transparencia.quantidadeBeneficiados}/>\n                    <Topic topicKey=\"valor disponibilizado\" topicValue={currencyFormatter(transparencia.valor)} />\n                </div>\n\n            }\n        </CenteredBlock>\n    )\n}\n\nexport default ListBeneficiarios","import React from 'react'\nimport {useLocation, useHistory} from 'react-router-dom'\nimport toast from '../../utils/toaster'\n\nconst NotFound = () => {\n    let location = useLocation()\n    let history = useHistory()\n    toast.error(`The path ${location.pathname} is not found. Redirecting to home...`)\n    history.push('/')\n    return <h1>{location.pathname} not found</h1>\n}\n\nexport default NotFound","import React from 'react'\nimport {useHistory} from 'react-router-dom'\n\nconst Header = () => {\n    let history = useHistory()\n    return (\n        <h1 onClick={() => history.push('/')}>\n            consulta dos beneficiários do auxílio emergencial\n        </h1>\n    )\n}\n\nexport default Header","import React from 'react'\n\nimport {Route, BrowserRouter, Switch} from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport ListBeneficiarios from './pages/ListBeneficiarios'\nimport NotFound from './pages/NotFound'\nimport Header from './components/Header'\n\nconst Routes = () => {\n    return (\n        <BrowserRouter>\n            <Header/>\n            <Switch>\n                <Route component={Home} path=\"/\" exact />\n                <Route component={ListBeneficiarios} path=\"/show-cidade/:cidadeId/:periodo\" />\n                <Route component={NotFound} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes","import React from 'react';\nimport {ToastContainer} from 'react-toastify'\nimport Routes from './routes'\n\nfunction App() {\n  return (\n    <div>\n      <ToastContainer\n        position='bottom-right'\n        autoClose={5000}\n        newestOnTop={true}\n        closeOnClick={true}\n        pauseOnHover={true}\n      />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}